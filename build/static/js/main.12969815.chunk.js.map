{"version":3,"sources":["axios.js","Components/Row.js","requests.js","Components/Banner.js","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetslixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12969815.chunk.js","sourcesContent":["import axios from 'axios';\n\n// base url to make the requests to themoviedb.org\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from \"movie-trailer\";\n\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  const options = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1,\n    },\n  };\n\n  console.log(movies);\n\n  const handleClick = (movie) => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      movieTrailer(movie?.title || \"\")\n        .then((url) => {\n          const urlParams = new URLSearchParams(new URL(url).search);\n          setTrailerUrl(urlParams.get(\"v\"));\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  return (\n    <div className=\"row\">\n      <h1>{title}</h1>\n\n      <div className=\"row_posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\n              key={movie.id}\n              onClick={() => handleClick(movie)}\n              src={`${baseURL}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.title}\n            />\n          );\n        })}\n      </div>\n\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={options} />}\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"613806e2198bb9f17118f58e240d30ed\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetslixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default requests;","import React, { useState, useEffect } from \"react\";\nimport axios from \"../axios\";\nimport requests from \"../requests\";\nimport \"./Banner.css\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetslixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  console.log(\"Movie\" + movie);\n\n  //function to cut the description of the movie\n  function truncate(str, n){\n      return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\n  }\n\n  return (\n    <header className=\"banner\"\n        style={{\n            backgroundSize: \"Cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center center\",\n        }}\n    >\n         <div className=\"banner_contents\">\n            <h1 className=\"banner_title\">\n                {movie?.title || movie?.name || movie?.original_name}\n            </h1>\n            <div className=\"banner_buttons\">\n                <button className=\"banner_button\">Play</button>\n                <button className=\"banner_button\">My List</button>\n            </div>\n            <h1 className=\"banner_description\">\n                {truncate(movie?.overview, 150)}\n            </h1>\n         </div>\n         <div className=\"banner_fadeBotton\" />\n    </header>\n  );\n}\n\nexport default Banner;\n","import React,{useEffect, useState} from \"react\";\nimport './Nav.css';\n\nfunction Nav() {\n\n    const [show, handleShow] = useState(false);\n\n        useEffect( () => {\n            window.addEventListener(\"scroll\", () => {\n                if(window.scrollY > 100){\n                    handleShow(true);\n                }else handleShow(false);\n            });\n            return () => {\n                window.removeEventListener(\"scroll\");\n            };\n        }, []);\n\n  return (\n    <div className={`nav ${show && \"nav_black\"}`}>\n      <img\n        className=\"nav_logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/800px-Netflix_2015_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n       <img\n        className=\"nav_avatar\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n        alt=\"Netflix Logo\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./Components/Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Components/Banner\";\nimport Nav from \"./Components/Nav\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n\n      <Banner />\n\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetslixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}